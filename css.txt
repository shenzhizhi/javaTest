<link href="style.css" rel="stylesheet" type="text/css" />
href是路径 rel规定了当前文档与被连接文档之间的关系 type规定被连接文档的mime类型

内联式>嵌入式>外部式。就近原则

关于定位position：
absolute:相对于第一个具有position属性的父元素进行定位，所以一般搭配一个relative的父元素进行使用
relative：相对于正常的文档流位置进行偏移
fixed：相对于浏览器视图进行定位，

浮动模型：
浮动元素的定位还是基于正常的文档流，然后从文档流中抽出并尽可能远的移动至左侧或者右侧，文字内容会围绕在浮动元素周围。它只是改变了文档流的显示，而没有脱离文档流

.foot > li 子选择器，表示class为foot的元素的子元素
包含（后代）选择器
.first span{color:red;} 表示class为first的后代中的所有span

>作用于该元素的第一代后代， 空格作用于元素的所有后代，就是有递归的意思


关于水平居中：
行内元素：通过设置父元素 text-align:center (设置文字排列方式)
定宽块级元素：当一个块级元素满足（定宽+左右外边距为auto）则该元素可以为居中
不定宽块状元素：
    放入table中：其实table可以算是定宽块元素，所以把元素放进去，在设置table的外边距左右为auto，（table的宽度是内容的长度）
    把块级元素变为行级元素：把元素变成行级元素，再设置父元素的属性text-align：center （会把元素变成行级元素，少了一些功能）
    float结合relative：把块级元素浮动到左边（清空起点）。设置相对定位relative（相对0起点进行偏移）。

垂直居中（行级元素）：
父元素高度确定的单行文本:设置文本行高跟父元素的高度一样
父元素高度确定的多行文本：
	使用table的td：把inline-block元素放在table的td内，因为td自带vertical-align-middle属性，所有就实现了垂直居中
	强制把父元素变成td属性，IE6,7不兼容：父元素设置成display：table-cell，再加上vertical-align:middle,其实是强行使用表格属性

块级元素的居中需要使用定位：

	
隐形改变display类型：
一个元素如果被设置了display：absolute，或者float：left/right，那这个元素就会变成inline-block形式。

css/div命名：
wrap外套：最外层
header头部：头部
main主要内容：主体内容
main-left左侧：左侧布局
main-right右侧：右侧布局
nav导航条：网页菜单导航条
content内容：网页中部主体
footer：底部

框模型：
====
想让一个div以边框为准，就设置box-sizing：border-box
想以内容为准：设置box-sizing：content-box
====
背景裁剪，以什么为准：
background-clip：border-box，显示到边框
background-clip：padding-box，显示到内间距
background-clip：content，显示到内容	

overflow溢出内容处理

z-index设置显示在z轴的高低，数字越大就优先级越高，z-index属性只有在设置position定位时有效
并且在父元素与子元素都设置了z-index的情况下，子元素永远在父元素上面

一般设置div宽度使用max-width更好，因为在窗口大于这个数窗口保持不变，小于这个数窗口会自动调整宽度

浮动元素（清除浮动）
一般可以在父类的最后设置一道墙，防止父类崩塌，style为clear:both的空div
但是这样每一个浮动容器就都要加上这些无语义的墙，
所以只好设置一个自动添加墙的机制：
	父容器的after伪类  .clearfix{content:''; display:block;clear:both;}
浮动元素的特点
1、浮动的元素可以设置width、height、margin、padding
2、浮动的元素不区分行块元素，都能设宽高，并排显示，不独占一行
3、浮动的元素不接受display转换显示模式，因为浮动的元素没有行内、块级元素之分
4、浮动的元素如不设置宽高，会自动收缩宽度，会根据内容撑开
5、浮动的元素不占标准流的位置
6、浮动的元素不能设置margin:0 auto;居中

float跟position:absolute都是脱离文档流。但是浮动还是跟其他元素在同一层，absolute是跟其他元素不同层。
